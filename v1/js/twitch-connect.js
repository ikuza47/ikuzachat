// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —á–∞—Ç—É
let socket = null;
let reconnectAttempts = 0;
const maxReconnectAttempts = 10;
let channelUserId = null;
let badgesInitialized = false;
let emotesInitialized = false;
let connectionEstablished = false;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–µ–π–¥–∂–∏–∫–æ–≤
async function initializeBadges() {
    console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–µ–π–¥–∂–∏–∫–æ–≤...');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏
    if (typeof window.updateLoadingStatus === 'function') {
        window.updateLoadingStatus('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–µ–π–¥–∂–∏–∫–æ–≤...');
    }
    
    // –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –±–æ–ª–µ–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
    await new Promise(resolve => setTimeout(resolve, 500));
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ –º–æ–¥—É–ª—å badges
        if (typeof badges === 'undefined') {
            console.error('‚ùå –ú–æ–¥—É–ª—å badges –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—Ä—è–¥–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–æ–≤');
            return false;
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –±–µ–π–¥–∂–∏–∫–æ–≤
        if (typeof badges.addStyles === 'function') {
            badges.addStyles();
            console.log('‚úÖ –°—Ç–∏–ª–∏ –¥–ª—è –±–µ–π–¥–∂–∏–∫–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
        } else {
            console.error('‚ùå –§—É–Ω–∫—Ü–∏—è addStyles –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –º–æ–¥—É–ª–µ badges');
            return false;
        }
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫
        if (typeof badges.setupErrorHandling === 'function') {
            badges.setupErrorHandling();
            console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫ –¥–ª—è –±–µ–π–¥–∂–∏–∫–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–µ–π–¥–∂–∏–∫–∏
        if (typeof badges.init === 'function') {
            const success = await badges.init(channel);
            if (success) {
                badgesInitialized = true;
                console.log('‚úÖ –ë–µ–π–¥–∂–∏–∫–∏ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
                return true;
            } else {
                console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–µ–π–¥–∂–∏–∫–∏');
                return false;
            }
        } else {
            console.error('‚ùå –§—É–Ω–∫—Ü–∏—è init –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –º–æ–¥—É–ª–µ badges');
            return false;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–µ–π–¥–∂–∏–∫–æ–≤:', error);
        return false;
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–º–æ–¥–∑–∏
async function initializeEmotes() {
    console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–º–æ–¥–∑–∏...');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏
    if (typeof window.updateLoadingStatus === 'function') {
        window.updateLoadingStatus('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–º–æ–¥–∑–∏...');
    }
    
    // –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –±–æ–ª–µ–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
    await new Promise(resolve => setTimeout(resolve, 500));
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ –º–æ–¥—É–ª—å emotes
        if (typeof emotes === 'undefined') {
            console.error('‚ùå –ú–æ–¥—É–ª—å emotes –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—Ä—è–¥–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–æ–≤');
            return false;
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è —ç–º–æ–¥–∑–∏
        if (typeof emotes.addStyles === 'function') {
            emotes.addStyles();
            console.log('‚úÖ –°—Ç–∏–ª–∏ –¥–ª—è —ç–º–æ–¥–∑–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
        } else {
            console.error('‚ùå –§—É–Ω–∫—Ü–∏—è addStyles –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –º–æ–¥—É–ª–µ emotes');
            return false;
        }
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫
        if (typeof emotes.setupErrorHandling === 'function') {
            emotes.setupErrorHandling();
            console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫ –¥–ª—è —ç–º–æ–¥–∑–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —ç–º–æ–¥–∑–∏
        if (typeof emotes.init === 'function') {
            const success = await emotes.init(channel);
            if (success) {
                emotesInitialized = true;
                console.log('‚úÖ –≠–º–æ–¥–∑–∏ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
                return true;
            } else {
                console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —ç–º–æ–¥–∑–∏');
                return false;
            }
        } else {
            console.error('‚ùå –§—É–Ω–∫—Ü–∏—è init –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –º–æ–¥—É–ª–µ emotes');
            return false;
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —ç–º–æ–¥–∑–∏:', error);
        return false;
    }
}

function connectToChat() {
    console.log(`üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Twitch IRC –¥–ª—è –∫–∞–Ω–∞–ª–∞ #${channel}...`);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏
    if (typeof window.updateLoadingStatus === 'function') {
        window.updateLoadingStatus('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Twitch —á–∞—Ç—É...');
    }
    
    // –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –±–æ–ª–µ–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
    setTimeout(() => {
        try {
            socket = new WebSocket('wss://irc-ws.chat.twitch.tv:443');
            
            socket.onopen = () => {
                console.log('‚úÖ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
                reconnectAttempts = 0;
                socket.send('CAP REQ :twitch.tv/tags twitch.tv/commands');
                socket.send('PASS SCHMOOPIIE');
                socket.send('NICK justinfan12345');
                socket.send('USER justinfan12345 8 * :justinfan12345');
                socket.send(`JOIN #${channel}`);
                console.log(`‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ #${channel}`);
                
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
                connectionEstablished = true;
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ —Ä–µ—Å—É—Ä—Å—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã
                if (badgesInitialized && emotesInitialized) {
                    console.log('‚úÖ –í—Å–µ —Ä–µ—Å—É—Ä—Å—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã, —Å–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏');
                    setTimeout(() => {
                        if (typeof window.hideLoadingIndicator === 'function') {
                            window.hideLoadingIndicator();
                        }
                    }, 500);
                }
            };

            socket.onmessage = async (event) => {
                const message = event.data;
                console.log(`üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: ${message}`);
                
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ PING
                if (message.startsWith('PING')) {
                    console.log('üì® –û—Ç–≤–µ—Ç –Ω–∞ PING');
                    socket.send('PONG :tmi.twitch.tv');
                    return;
                }
                
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ CLEARCHAT (–æ—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞)
                if (message.includes(' CLEARCHAT #')) {
                    console.log('üßπ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç–∞');
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–µ–Ω–∞ –ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∏
                    if (clearChatOnCommand) {
                        console.log('üßπ –ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞ –≤–∫–ª—é—á–µ–Ω–∞, –æ—á–∏—â–∞–µ–º —á–∞—Ç');
                        clearChat();
                    } else {
                        console.log('üßπ –ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
                    }
                    return;
                }
                
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ PRIVMSG (—Å–æ–æ–±—â–µ–Ω–∏—è)
                if (message.includes(' PRIVMSG #')) {
                    console.log('üí¨ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–∞—Ç–∞');
                    try {
                        // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–≥–∏
                        const tags = extractTags(message);
                        console.log(`üîñ –¢–µ–≥–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: ${tags}`);

                        // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ü–≤–µ—Ç –Ω–∏–∫–∞
                        const color = extractColor(tags);
                        console.log(`üé® –¶–≤–µ—Ç –Ω–∏–∫–∞: ${color || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);

                        // –ò–∑–≤–ª–µ–∫–∞–µ–º room-id
                        const roomIdMatch = message.match(/@.*?room-id=(\d+);/);
                        let roomId = roomIdMatch ? roomIdMatch[1] : null;
                        console.log(`üÜî Room ID –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è: ${roomId || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}`);

                        // –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∏–∫–Ω–µ–π–º
                        const username = extractUsername(message);
                        console.log(`üë§ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${username}`);

                        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±–æ—Ç–∞ (–µ—Å–ª–∏ –º–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω)
                        if (window.botModule && typeof window.botModule.isUserBot === 'function') {
                            if (window.botModule.isUserBot(username)) {
                                console.log('üö´ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–æ');
                                return; // –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                            }
                        }

                        // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
                        const text = extractMessageText(message);
                        console.log(`üìù –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: ${text}`);

                        if (!text) {
                            console.log('‚ö†Ô∏è –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø—É—Å—Ç');
                            return;
                        }

                        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É—á–µ—Ç–æ–º —Ü–≤–µ—Ç–∞
                        console.log('üì® –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç');
                        await addMessage(username, text, tags, text, roomId, color);
                    } catch (error) {
                        console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
                        console.log('–°–æ–æ–±—â–µ–Ω–∏–µ:', message);
                    }
                }
            };

            socket.onerror = (error) => {
                console.error('‚ùå –û—à–∏–±–∫–∞ WebSocket:', error);
            };

            socket.onclose = (event) => {
                console.log(`üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ (–∫–æ–¥: ${event.code}, –ø—Ä–∏—á–∏–Ω–∞: ${event.reason})`);
                
                if (!connectionEstablished && reconnectAttempts >= maxReconnectAttempts) {
                    console.error('‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è');
                    if (typeof window.showErrorIndicator === 'function') {
                        window.showErrorIndicator('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —á–∞—Ç—É Twitch', 
                            '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–º—è –∫–∞–Ω–∞–ª–∞ –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ');
                    }
                    return;
                }
                
                if (reconnectAttempts < maxReconnectAttempts) {
                    reconnectAttempts++;
                    const delay = Math.min(5000 * reconnectAttempts, 30000);
                    console.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ ${delay}ms (–ø–æ–ø—ã—Ç–∫–∞ ${reconnectAttempts}/${maxReconnectAttempts})`);
                    setTimeout(connectToChat, delay);
                }
            };
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ WebSocket:', error);
            setTimeout(connectToChat, 5000);
        }
    }, 500); // –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –±–æ–ª–µ–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã
function checkSystemReady() {
    // –ï—Å–ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, —Å–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
    if (connectionEstablished) {
        if (typeof window.hideLoadingIndicator === 'function') {
            window.hideLoadingIndicator();
        }
        return;
    }
    
    // –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
    if (reconnectAttempts >= maxReconnectAttempts) {
        if (typeof window.showErrorIndicator === 'function') {
            window.showErrorIndicator('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —á–∞—Ç—É Twitch', 
                '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–º—è –∫–∞–Ω–∞–ª–∞ –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ');
        }
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É, –≥–æ—Ç–æ–≤–∞ –ª–∏ —Å–∏—Å—Ç–µ–º–∞
    setTimeout(checkSystemReady, 1000);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
function startReadyCheck() {
    setTimeout(checkSystemReady, 5000);
}

// –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫
console.log('üöÄ –ó–∞–ø—É—Å–∫ Twitch Chat Overlay');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID –∫–∞–Ω–∞–ª–∞
async function getChannelUserId() {
    try {
        console.log(`üîç –ü–æ–ª—É—á–µ–Ω–∏–µ Twitch user ID –¥–ª—è –∫–∞–Ω–∞–ª–∞: ${channel}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏ —Ñ—É–Ω–∫—Ü–∏—è getTwitchUserId
        if (typeof badges !== 'undefined' && typeof badges.getTwitchUserId === 'function') {
            channelUserId = await badges.getTwitchUserId(channel);
        } else if (typeof emotes !== 'undefined' && typeof emotes.getTwitchUserId === 'function') {
            channelUserId = await emotes.getTwitchUserId(channel);
        } else {
            console.error('‚ùå –§—É–Ω–∫—Ü–∏—è getTwitchUserId –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            return;
        }
        
        if (channelUserId) {
            console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω Twitch user ID –∫–∞–Ω–∞–ª–∞: ${channel} -> ${channelUserId}`);
        } else {
            console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å Twitch user ID –¥–ª—è –∫–∞–Ω–∞–ª–∞: ${channel}`);
        }
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ Twitch user ID –¥–ª—è –∫–∞–Ω–∞–ª–∞ ${channel}:`, error);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
async function startInitialization() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–µ–π–¥–∂–∏–∫–∏ –∏ —ç–º–æ–¥–∑–∏
    const [badgesSuccess, emotesSuccess] = await Promise.all([
        initializeBadges(),
        initializeEmotes()
    ]);
    
    // –ü–æ–ª—É—á–∞–µ–º ID –∫–∞–Ω–∞–ª–∞
    await getChannelUserId();
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —á–∞—Ç—É
    console.log('üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —á–∞—Ç—É...');
    setTimeout(connectToChat, 1000);
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã
    startReadyCheck();
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
startInitialization().catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
    console.log('üîÑ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –ø–æ–ª–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...');
    setTimeout(connectToChat, 1000);
    startReadyCheck();
});