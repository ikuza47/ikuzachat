// –ö—ç—à 7TV —ç–º–æ–¥–∑–∏
let sevenTvEmotesCache = {};
let sevenTvEmotesLoaded = false;
let sevenTvEmotesLoading = false; // —Ñ–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏

// –ó–∞–≥—Ä—É–∑–∫–∞ 7TV —ç–º–æ–¥–∑–∏
async function loadSevenTvEmotes() {
    if (sevenTvEmotesLoaded) {
        console.log('üìã 7TV —ç–º–æ–¥–∑–∏ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –∫—ç—à–∞');
        return sevenTvEmotesCache;
    }

    if (sevenTvEmotesLoading) {
        console.log('‚è≥ 7TV —ç–º–æ–¥–∑–∏ —É–∂–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è, –∂–¥—ë–º...');
        // –ñ–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
        while (sevenTvEmotesLoading && !sevenTvEmotesLoaded) {
            await new Promise(resolve => setTimeout(resolve, 100));
        }
        return sevenTvEmotesCache;
    }

    sevenTvEmotesLoading = true;
    console.log('üîÑ –ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ 7TV —ç–º–æ–¥–∑–∏...');

    try {
        const response = await fetch('https://7tv.io/v3/emotes/global');
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        const data = await response.json();
        console.log('üì• –ü–æ–ª—É—á–µ–Ω—ã 7TV —ç–º–æ–¥–∑–∏ (–ø–µ—Ä–≤—ã–µ 5):', data.items?.slice(0, 5));

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —ç–º–æ–¥–∑–∏ –≤ –∫—ç—à
        for (const emote of data.items || data) {
            sevenTvEmotesCache[emote.name.toLowerCase()] = {
                url: `https://cdn.7tv.app/emote/${emote.id}/2x`,
                name: emote.name
            };
        }

        console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ 7TV —ç–º–æ–¥–∑–∏:', Object.keys(sevenTvEmotesCache).length);
        sevenTvEmotesLoaded = true;
        sevenTvEmotesLoading = false;

        return sevenTvEmotesCache;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ 7TV —ç–º–æ–¥–∑–∏:', error);
        sevenTvEmotesLoading = false;
        sevenTvEmotesLoaded = true; // —á—Ç–æ–±—ã –Ω–µ –ø—ã—Ç–∞—Ç—å—Å—è —Å–Ω–æ–≤–∞
        return {};
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–º–æ–¥–∑–∏ –ø–µ—Ä–µ–¥ –Ω–∏–∫–æ–º
async function addSevenTvEmojiToUsername(username) {
    // –ï—Å–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ‚Äî –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å
    if (!sevenTvEmotesLoaded) {
        console.log('üîÑ 7TV —ç–º–æ–¥–∑–∏ –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –∑–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É...');
        await loadSevenTvEmotes();
    }

    if (!sevenTvEmotesLoaded) {
        console.warn('‚ö†Ô∏è 7TV —ç–º–æ–¥–∑–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å');
        return null;
    }

    const lowerUsername = username.toLowerCase();
    const emote = sevenTvEmotesCache[lowerUsername];
    if (emote) {
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω 7TV —ç–º–æ–¥–∑–∏ –¥–ª—è –Ω–∏–∫–∞ ${username}: ${emote.name}`);
        const img = document.createElement('img');
        img.src = emote.url;
        img.alt = emote.name;
        img.className = 'emote';
        img.style.height = `${parseInt(window.size) * 1.2}px`;
        img.style.marginRight = '4px';
        img.style.verticalAlign = 'middle';
        img.loading = 'lazy';
        return img;
    } else {
        console.log(`‚ÑπÔ∏è 7TV —ç–º–æ–¥–∑–∏ –¥–ª—è –Ω–∏–∫–∞ ${username} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }

    return null;
}

// –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –º–æ–¥—É–ª—è
console.log('üîÑ –ú–æ–¥—É–ª—å 7TV —ç–º–æ–¥–∑–∏ –ø–æ—Å–ª–µ –Ω–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫—É...');
loadSevenTvEmotes();

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
window.sevenTvNickModule = {
    loadSevenTvEmotes,
    addSevenTvEmojiToUsername
};

console.log('‚úÖ –ú–æ–¥—É–ª—å 7TV —ç–º–æ–¥–∑–∏ –ø–æ—Å–ª–µ –Ω–∏–∫–∞ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');