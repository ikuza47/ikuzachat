// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞ —Å–∏—Å—Ç–µ–º—ã
const userLang = navigator.language || navigator.userLanguage;
let currentLang = userLang.startsWith('ru') ? 'ru' : 'en';
console.log('üåê –Ø–∑—ã–∫ —Å–∏—Å—Ç–µ–º—ã:', userLang, '–í—ã–±—Ä–∞–Ω —è–∑—ã–∫:', currentLang);

// –Ø–∑—ã–∫–æ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏
const translations = {
    ru: {
        title: 'IkuzaChat - –ù–∞—Å—Ç—Ä–æ–π–∫–∏',
        mainTitle: 'IkuzaChat',
        subtitle: '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –≤–∞—à –æ–≤–µ—Ä–ª–µ–π –¥–ª—è Twitch —á–∞—Ç–∞',
        tabBasic: '–û—Å–Ω–æ–≤–Ω–æ–µ',
        tabAdvanced: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ',
        tabModules: '–ú–æ–¥—É–ª–∏',
        basicSettingsTitle: '–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏',
        channelLabel: '–ò–º—è –∫–∞–Ω–∞–ª–∞',
        channelDesc: '–í–≤–µ–¥–∏—Ç–µ –∏–º—è Twitch-–∫–∞–Ω–∞–ª–∞, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç —á–∏—Ç–∞—Ç—å—Å—è —á–∞—Ç',
        fontLabel: '–®—Ä–∏—Ñ—Ç',
        fontDesc: '–í—ã–±–µ—Ä–∏—Ç–µ —à—Ä–∏—Ñ—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ',
        sizeLabel: '–†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞',
        sizeDesc: '–†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞ –≤ —á–∞—Ç–µ –≤ –ø–∏–∫—Å–µ–ª—è—Ö',
        advancedSettingsTitle: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏',
        timeLabel: '–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Ä–µ–º—è',
        timeDesc: '–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM –ø–µ—Ä–µ–¥ –Ω–∏–∫–æ–º',
        timeZoneLabel: '–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å',
        timeZoneDesc: '–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏',
        backgroundLabel: '–û—Ç–æ–±—Ä–∞–∂–∞—Ç—å –∑–∞–¥–Ω–∏–π —Ñ–æ–Ω —Å–æ–æ–±—â–µ–Ω–∏–π',
        backgroundDesc: '–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π —á–µ—Ä–Ω—ã–π —Ñ–æ–Ω –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏',
        bgTransparencyLabel: '–ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å —Ñ–æ–Ω–∞',
        bgTransparencyDesc: '0 = –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π, 1 = –Ω–µ–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π',
        badgesLabel: '–û—Ç–æ–±—Ä–∞–∂–∞—Ç—å –±–µ–π–¥–∂–∏–∫–∏',
        badgesDesc: '–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –±–µ–π–¥–∂–∏–∫–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞, –ø–æ–¥–ø–∏—Å—á–∏–∫–∞ –∏ —Ç.–¥.',
        autoRemoveLabel: '–ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π',
        autoRemoveDesc: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è—Ç—å —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è',
        timeoutLabel: '–í—Ä–µ–º—è –¥–æ —É–¥–∞–ª–µ–Ω–∏—è (—Å–µ–∫)',
        timeoutDesc: '–ß–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ —É–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ',
        clearChatLabel: '–ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞',
        clearChatDesc: '–ß–∞—Ç –±—É–¥–µ—Ç –æ—á–∏—â–∞—Ç—å—Å—è –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /clear –≤ Twitch',
        colonLabel: '–î–æ–±–∞–≤–ª—è—Ç—å –¥–≤–æ–µ—Ç–æ—á–∏–µ –ø–æ—Å–ª–µ –Ω–∏–∫–∞',
        colonDesc: '–î–æ–±–∞–≤–ª—è—Ç—å : –ø–æ—Å–ª–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö',
        modulesTitle: '–ú–æ–¥—É–ª–∏',
        osuModuleLabel: 'osu! –º–æ–¥—É–ª—å',
        osuModuleDesc: '–í–∫–ª—é—á–∞–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—Ä—Ç–∞—Ö osu! –ø–æ —Å—Å—ã–ª–∫–µ',
        osuApiKeyLabel: 'osu! API –∫–ª—é—á',
        osuApiInstructionText: '–ö–ª—é—á –æ—Ç osu! API v1 –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—Ä—Ç–∞—Ö. ',
        osuApiLinkText: 'Instruction',
        osuMapLabel: '–ü–∞—Ä—Å–∏–Ω–≥ –∫–∞—Ä—Ç—ã',
        osuMapDesc: '–ü–∞—Ä—Å–∏—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –º–∞–ø—É –∏ –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é',
        osuScoreLabel: '–ü–∞—Ä—Å–∏–Ω–≥ —Å–∫–æ—Ä—ã',
        osuScoreDesc: '–ü–∞—Ä—Å–∏—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∫–æ—Ä –∏ –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∫–æ—Ä–µ (–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)',
        osuUserLabel: '–ü–∞—Ä—Å–∏–Ω–≥ —é–∑–µ—Ä–∞',
        osuUserDesc: '–ü–∞—Ä—Å–∏—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —é–∑–µ—Ä–∞ –∏ –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω—ë–º',
        osuHighlightLabel: '–í—ã–¥–µ–ª—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é',
        osuHighlightDesc: '–ú–µ–Ω—è–µ—Ç —á–∞—Å—Ç—å —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –¥—Ä—É–≥–æ–π —Ü–≤–µ—Ç: \n –ö–∞—Ä—Ç–∞ - —Ä–æ–∑–æ–≤—ã–π \n –°–∫–æ—Ä - –∂—ë–ª—Ç—ã–π \n –Æ–∑–µ—Ä - —Å–∏–Ω–∏–π',
        botModuleLabel: '–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –±–æ—Ç–æ–≤',
        botModuleDesc: '–°–∫—Ä—ã–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–æ–≤ (—Å–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è —Å GitHub)',
        copyBtnText: '–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É',
        resetBtnText: '–°–±—Ä–æ—Å–∏—Ç—å',
    },
    en: {
        title: 'IkuzaChat - Settings',
        mainTitle: 'IkuzaChat',
        subtitle: 'Configure your Twitch chat overlay',
        tabBasic: 'Basic',
        tabAdvanced: 'Advanced',
        tabModules: 'Modules',
        basicSettingsTitle: 'Basic Settings',
        channelLabel: 'Channel Name',
        channelDesc: 'Enter the name of the Twitch channel from which the chat will be read',
        fontLabel: 'Font',
        fontDesc: 'Choose a font for displaying messages in chat',
        sizeLabel: 'Font Size',
        sizeDesc: 'The size of the text in the chat in pixels',
        advancedSettingsTitle: 'Advanced Settings',
        timeLabel: 'Show time',
        timeDesc: 'Show current time in HH:MM format before the username',
        timeZoneLabel: 'Time zone',
        timeZoneDesc: 'Select the time zone for displaying time',
        backgroundLabel: 'Show message background',
        backgroundDesc: 'Display a semi-transparent black background behind messages',
        bgTransparencyLabel: 'Background transparency',
        bgTransparencyDesc: '0 = fully transparent, 1 = opaque',
        badgesLabel: 'Display Badges',
        badgesDesc: 'Show moderator, subscriber, etc. badges',
        autoRemoveLabel: 'Auto Remove Messages',
        autoRemoveDesc: 'Automatically delete old messages after a specified time',
        timeoutLabel: 'Time until deletion (sec)',
        timeoutDesc: 'How many seconds to delete the message after',
        clearChatLabel: 'Auto Clear Chat',
        clearChatDesc: 'Chat will be cleared when using /clear command in Twitch',
        colonLabel: 'Add colon after nickname',
        colonDesc: 'Add : after the username in messages',
        modulesTitle: 'Modules',
        osuModuleLabel: 'osu! module',
        osuModuleDesc: 'Enables support for displaying osu! map info from a link',
        osuApiKeyLabel: 'osu! API key',
        osuApiInstructionText: 'osu! API v1 key for getting beatmap info. ',
        osuApiLinkText: 'Instruction',
        osuMapLabel: 'Parse map',
        osuMapDesc: 'Parses map link and displays information',
        osuScoreLabel: 'Parse score',
        osuScoreDesc: 'Parses score link and displays score info (not working)',
        osuUserLabel: 'Parse user',
        osuUserDesc: 'Parses user link and displays user info',
        osuHighlightLabel: 'Highlight info',
        osuHighlightDesc: 'Changes part of the text to another color: \n Map - pink \n Score - yellow \n User - blue',
        botModuleLabel: 'Block Bots',
        botModuleDesc: 'Hide messages from bots (list loaded from GitHub)',
        copyBtnText: 'Copy Link',
        resetBtnText: 'Reset',
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
function updateTexts() {
    const t = translations[currentLang];

    document.title = t.title;
    document.getElementById('mainTitle').textContent = t.mainTitle;
    document.getElementById('subtitle').textContent = t.subtitle;

    document.getElementById('tabBasic').textContent = t.tabBasic;
    document.getElementById('tabAdvanced').textContent = t.tabAdvanced;
    document.getElementById('tabModules').textContent = t.tabModules;

    document.getElementById('basicSettingsTitle').textContent = t.basicSettingsTitle;
    document.getElementById('channelLabel').textContent = t.channelLabel;
    document.getElementById('channelDesc').textContent = t.channelDesc;
    document.getElementById('fontLabel').textContent = t.fontLabel;
    document.getElementById('fontDesc').textContent = t.fontDesc;
    document.getElementById('sizeLabel').textContent = t.sizeLabel;
    document.getElementById('sizeDesc').textContent = t.sizeDesc;

    document.getElementById('advancedSettingsTitle').textContent = t.advancedSettingsTitle;
    document.getElementById('timeLabel').textContent = t.timeLabel;
    document.getElementById('timeDesc').textContent = t.timeDesc;
    document.getElementById('timeZoneLabel').textContent = t.timeZoneLabel;
    document.getElementById('timeZoneDesc').textContent = t.timeZoneDesc;
    document.getElementById('backgroundLabel').textContent = t.backgroundLabel;
    document.getElementById('backgroundDesc').textContent = t.backgroundDesc;
    document.getElementById('bgTransparencyLabel').textContent = t.bgTransparencyLabel;
    document.getElementById('bgTransparencyDesc').textContent = t.bgTransparencyDesc;
    document.getElementById('badgesLabel').textContent = t.badgesLabel;
    document.getElementById('badgesDesc').textContent = t.badgesDesc;
    document.getElementById('autoRemoveLabel').textContent = t.autoRemoveLabel;
    document.getElementById('autoRemoveDesc').textContent = t.autoRemoveDesc;
    document.getElementById('timeoutLabel').textContent = t.timeoutLabel;
    document.getElementById('timeoutDesc').textContent = t.timeoutDesc;
    document.getElementById('clearChatLabel').textContent = t.clearChatLabel;
    document.getElementById('clearChatDesc').textContent = t.clearChatDesc;
    document.getElementById('colonLabel').textContent = t.colonLabel;
    document.getElementById('colonDesc').textContent = t.colonDesc;

    document.getElementById('modulesTitle').textContent = t.modulesTitle;
    document.getElementById('osuModuleLabel').textContent = t.osuModuleLabel;
    document.getElementById('osuModuleDesc').textContent = t.osuModuleDesc;
    document.getElementById('osuApiKeyLabel').textContent = t.osuApiKeyLabel;
    document.getElementById('osuApiInstructionText').textContent = t.osuApiInstructionText;
    document.getElementById('osuApiLinkText').textContent = t.osuApiLinkText;
    document.getElementById('osuMapLabel').textContent = t.osuMapLabel;
    document.getElementById('osuMapDesc').textContent = t.osuMapDesc;
    document.getElementById('osuScoreLabel').textContent = t.osuScoreLabel;
    document.getElementById('osuScoreDesc').textContent = t.osuScoreDesc;
    document.getElementById('osuUserLabel').textContent = t.osuUserLabel;
    document.getElementById('osuUserDesc').textContent = t.osuUserDesc;
    document.getElementById('osuHighlightLabel').textContent = t.osuHighlightLabel;
    document.getElementById('osuHighlightDesc').textContent = t.osuHighlightDesc;
    document.getElementById('botModuleLabel').textContent = t.botModuleLabel;
    document.getElementById('botModuleDesc').textContent = t.botModuleDesc;

    document.getElementById('copyBtnText').innerHTML = `<i class="fas fa-copy mr-2"></i>${t.copyBtnText}`;
    document.getElementById('resetBtnText').innerHTML = `<i class="fas fa-redo mr-2"></i>${t.resetBtnText}`;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
function updateInstructionLink() {
    const osuApiLink = document.getElementById('osuApiLink');
    if (currentLang === 'ru') {
        osuApiLink.href = 'https://github.com/ikuza47/ikuzachat/blob/main/publics/howgetosuapi.md';
    } else {
        osuApiLink.href = 'https://github.com/ikuza47/ikuzachat/blob/main/publics/howgetosuapi.md';
    }
}

// –§—É–Ω–∫—Ü–∏—è —Å–º–µ–Ω—ã —è–∑—ã–∫–∞
function changeLanguage() {
    const langSelect = document.getElementById('langSelector');
    currentLang = langSelect.value;
    console.log('üåê –Ø–∑—ã–∫ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞:', currentLang);
    updateTexts();
    updateInstructionLink();
    updateUrl();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
function initLanguage() {
    const langSelect = document.getElementById('langSelector');
    langSelect.value = currentLang;
    updateTexts();
    updateInstructionLink();
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
document.querySelectorAll('.tab').forEach(tab => {
    tab.addEventListener('click', () => {
        document.querySelectorAll('.tab').forEach(t => t.classList.remove('active', 'bg-card-bg', 'text-accent-orange', 'border-l-2', 'border-accent-orange'));
        document.querySelectorAll('.tab').forEach(t => t.classList.add('bg-primary-bg', 'text-text-secondary', 'hover:bg-card-bg', 'hover:text-text-primary'));
        document.querySelectorAll('.tab-content').forEach(c => c.classList.add('hidden'));
        document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
        tab.classList.remove('bg-primary-bg', 'text-text-secondary', 'hover:bg-card-bg', 'hover:text-text-primary');
        tab.classList.add('active', 'bg-card-bg', 'text-accent-orange', 'border-l-2', 'border-accent-orange');
        const tabId = tab.getAttribute('data-tab') + '-tab';
        document.getElementById(tabId).classList.remove('hidden');
        document.getElementById(tabId).classList.add('active');
    });
});

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤—Ä–µ–º–µ–Ω–∏
function toggleTimeSettings() {
    const timeSettings = document.getElementById('timeSettings');
    if (document.getElementById('showTime').checked) {
        timeSettings.classList.remove('hidden');
    } else {
        timeSettings.classList.add('hidden');
    }
    updateUrl();
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ–æ–Ω–∞
function toggleBackgroundSettings() {
    const backgroundSettings = document.getElementById('backgroundSettings');
    if (document.getElementById('showBackground').checked) {
        backgroundSettings.classList.remove('hidden');
    } else {
        backgroundSettings.classList.add('hidden');
    }
    updateUrl();
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ osu!
function toggleOsuSettings() {
    const osuSettings = document.getElementById('osuModuleSettings');
    if (document.getElementById('osuModuleToggle').checked) {
        osuSettings.classList.remove('hidden');
    } else {
        osuSettings.classList.add('hidden');
    }
    updateUrl();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏
function updateBgTransparencyValue() {
    const slider = document.getElementById('bgTransparency');
    const value = parseFloat(slider.value).toFixed(2);
    document.getElementById('bgTransparencyValue').textContent = value;
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–π–º–∞—É—Ç–∞
function toggleTimeout() {
    const timeoutGroup = document.getElementById('timeoutGroup');
    if (document.getElementById('autoRemove').checked) {
        timeoutGroup.classList.remove('hidden');
    } else {
        timeoutGroup.classList.add('hidden');
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —à—Ä–∏—Ñ—Ç–∞
document.getElementById('fontFamily').addEventListener('change', function() {
    const customInput = document.getElementById('customFontInput');
    const preview = document.querySelector('.font-preview');
    if (this.value === 'custom') {
        customInput.classList.remove('hidden');
        preview.textContent = '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —à—Ä–∏—Ñ—Ç–∞';
    } else {
        customInput.classList.add('hidden');
        preview.textContent = '–ü—Ä–∏–º–µ—Ä —Ç–µ–∫—Å—Ç–∞';
        preview.style.fontFamily = this.value;
    }
    updateUrl();
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–≤—å—é —à—Ä–∏—Ñ—Ç–∞
document.getElementById('customFontInput').addEventListener('input', function() {
    const preview = document.querySelector('.font-preview');
    preview.textContent = '–ü—Ä–æ–≤–µ—Ä–∫–∞ —à—Ä–∏—Ñ—Ç–∞: ' + this.value;
    preview.style.fontFamily = this.value + ', sans-serif';
    updateUrl();
});

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏
function updateUrl() {
    const channel = document.getElementById('channel').value.trim().toLowerCase();
    if (!channel) return;

    const params = new URLSearchParams();
    params.append('channel', channel);

    let fontValue = document.getElementById('fontFamily').value;
    if (fontValue === 'custom') {
        const customFont = document.getElementById('customFontInput').value.trim();
        fontValue = customFont ? `'${customFont}', sans-serif` : 'sans-serif';
    }
    params.append('font', encodeURIComponent(fontValue));
    params.append('size', document.getElementById('fontSize').value);
    params.append('showBadges', document.getElementById('showBadges').checked);
    params.append('clearChatOnCommand', document.getElementById('clearChatOnCommand').checked);
    params.append('colon', document.getElementById('colonEnabled').checked);

    if (document.getElementById('autoRemove').checked) {
        params.append('autoRemove', 'true');
        params.append('timeout', document.getElementById('removeTimeout').value || '5');
    }

    // –í—Ä–µ–º—è
    if (document.getElementById('showTime').checked) {
        const timeZone = document.getElementById('timeZone').value;
        params.append('msgtime', timeZone);
    }

    // osu!
    if (document.getElementById('osuModuleToggle').checked) {
        const osuKey = document.getElementById('osuApiKey').value.trim();
        if (osuKey) {
            params.append('osuapi', osuKey);
        }

        // –ù–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã osu!
        params.append('osuMap', document.getElementById('osuMap').checked);
        params.append('osuScore', document.getElementById('osuScore').checked); // –≤—ã–∫–ª—é—á–µ–Ω, –Ω–æ –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –∫–∞–∫ false
        params.append('osuUser', document.getElementById('osuUser').checked);
        params.append('osuHighlight', document.getElementById('osuHighlight').checked);
    }

    // bot!
    params.append('ignorebots', document.getElementById('botModuleToggle').checked);

    // –ù–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–æ–Ω–∞
    params.append('background', document.getElementById('showBackground').checked);
    if (document.getElementById('showBackground').checked) {
        const transparency = parseFloat(document.getElementById('bgTransparency').value).toFixed(2);
        params.append('bgtransparent', transparency);
    }

    // –Ø–∑—ã–∫
    params.append('lang', currentLang);

    const url = `v1/index.html?${params.toString()}`;
    const fullUrl = `${window.location.origin}${window.location.pathname.substring(0, window.location.pathname.lastIndexOf('/') + 1)}${url}`;
    document.getElementById('overlayUrl').value = fullUrl;
}

// –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏
function copyUrl() {
    const input = document.getElementById('overlayUrl');
    input.select();
    document.execCommand('copy');
    alert('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!');
}

// –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫
function resetSettings() {
    if (confirm('–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏?')) {
        document.getElementById('channel').value = 'ikuza47';
        document.getElementById('fontFamily').value = "'Segoe UI', sans-serif";
        document.getElementById('fontSize').value = '24';
        document.getElementById('showBadges').checked = true;
        document.getElementById('autoRemove').checked = false;
        document.getElementById('clearChatOnCommand').checked = true;
        document.getElementById('colonEnabled').checked = false; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–∫–ª—é—á–µ–Ω–æ
        document.getElementById('showTime').checked = false; // –ù–æ–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
        document.getElementById('timeZone').value = '0'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é UTC+0
        document.getElementById('osuModuleToggle').checked = false;
        document.getElementById('osuApiKey').value = '';
        document.getElementById('osuMap').checked = true; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∫–ª—é—á–µ–Ω–æ
        document.getElementById('osuScore').checked = false; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–∫–ª—é—á–µ–Ω–æ
        document.getElementById('osuUser').checked = true; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∫–ª—é—á–µ–Ω–æ
        document.getElementById('osuHighlight').checked = false; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–∫–ª—é—á–µ–Ω–æ
        document.getElementById('botModuleToggle').checked = false;
        document.getElementById('showBackground').checked = false; // –ù–æ–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–∫–ª—é—á–µ–Ω
        document.getElementById('bgTransparency').value = '0.3';
        updateBgTransparencyValue();
        document.getElementById('customFontInput').classList.add('hidden');
        document.querySelector('.font-preview').textContent = '–ü—Ä–∏–º–µ—Ä —Ç–µ–∫—Å—Ç–∞';
        document.querySelector('.font-preview').style.fontFamily = "'Segoe UI', sans-serif";
        document.getElementById('timeoutGroup').classList.add('hidden');
        document.getElementById('osuModuleSettings').classList.add('hidden');
        document.getElementById('timeSettings').classList.add('hidden'); // –°–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ä–µ–º–µ–Ω–∏
        document.getElementById('backgroundSettings').classList.add('hidden'); // –°–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–æ–Ω–∞
        document.querySelector('.tab[data-tab="basic"]').click();
        updateUrl();
        alert('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã');
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', () => {
    initLanguage();
    updateBgTransparencyValue(); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª–∞–π–¥–µ—Ä–∞
    updateUrl(); // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
});